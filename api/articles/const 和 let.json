{"title":"const 和 let","slug":"const 和 let","date":"2021-03-30T10:49:59.551Z","updated":"2021-03-30T11:24:15.915Z","comments":true,"excerpt":"","content":"<p>测试<br><img src=\"https://cdn.jsdelivr.net/gh/XiaoLi-sach/source@main/images/cover1.jpg,\" alt=\"好家伙\" title=\"初音\"></p>\n<hr>\n<h5 id=\"1-暂时性死区\"><a href=\"#1-暂时性死区\" class=\"headerlink\" title=\"1. 暂时性死区\"></a><strong>1. 暂时性死区</strong></h5><ul>\n<li><p><code>let 和 const</code> 命令声明的变量五变量提升， 在命令执行前， 使用该变量都将报错， 这一部分成为‘‘暂时性死区‘’</p>\n</li>\n<li><p><code>let tmp</code> 将<code>tmp</code> 变量绑定到 <code>&#123;&#125;</code> 代码块之内， 外部的<code>tmp </code>声明无效，<code> tmp = ‘abc’</code> 就处在死去， 所以报错。 同理在以前没有 let 和 <code>const </code>命令的时候， <code>typeof </code>是一个安全的运算符， 即使变量没有被声明， 也会正常返回 <code>undefined </code>， 但如果<code>typeof</code>处在死区中， 处理后了在后文被<code>let </code>和 <code>const </code>的变量 将会报错。</p>\n</li>\n</ul>\n<hr>\n<h5 id=\"2-顶层对象\"><a href=\"#2-顶层对象\" class=\"headerlink\" title=\"2. 顶层对象\"></a><strong>2. 顶层对象</strong></h5><ul>\n<li>var 和 function 的全局声明会自动绑定到 window 或 global 对象， 这是 es 5 全局变量的一个缺陷， let 和 const 不会、</li>\n</ul>\n<hr>\n<h5 id=\"3-const-命令\"><a href=\"#3-const-命令\" class=\"headerlink\" title=\"3. const 命令\"></a><strong>3. const 命令</strong></h5><ul>\n<li>const 声明的变量只是引用无法修改， 对象的内部结构可以改变， 使用 Object.freeze() 可以彻底锁定某对象， 需递归锁定多层级对象。</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> constantize = <span class=\"function\">(<span class=\"params\">obj</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.freeze(obj);</span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.keys(obj).forEach(<span class=\"function\">(<span class=\"params\">key, i</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> obj[key] === <span class=\"string\">&quot;object&quot;</span>) &#123;</span><br><span class=\"line\">      constantize(obj[key]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","categories":[],"tags":[{"name":"ES6标准入门阅读总结","path":"api/tags/ES6标准入门阅读总结.json"}]}