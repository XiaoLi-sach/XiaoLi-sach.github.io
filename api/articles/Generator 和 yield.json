{"title":"Generator 和 yield","slug":"Generator 和 yield","date":"2021-03-30T10:49:59.553Z","updated":"2021-03-30T11:24:39.171Z","comments":true,"excerpt":"","content":"<p><code>Generator </code>会生成一个 <code>Iterator </code>， 每次 <code>Iterator.next() </code>返回 <code>yield </code>的产出值， 且中断程序执行。 代码如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>* <span class=\"title\">demo</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"keyword\">yield</span> <span class=\"number\">1</span>&#125;</span>`</span>)</span><br><span class=\"line\">\t<span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"keyword\">yield</span> <span class=\"number\">2</span>&#125;</span>`</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">yield</span>* demo2()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>* <span class=\"title\">demo2</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">yield</span> <span class=\"number\">3</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> ite = demo()</span><br><span class=\"line\">ite.next() <span class=\"comment\">// 返回值： &#123;value: 1, done: false&#125;</span></span><br><span class=\"line\">ite.next() <span class=\"comment\">// console: undefined, 返回值：&#123;value: 2, done: false&#125;</span></span><br><span class=\"line\">ite.next(<span class=\"number\">123456789</span>) <span class=\"comment\">//console: 123456789, 返回值： &#123;value: 3, done: false&#125;</span></span><br></pre></td></tr></table></figure>\n<p>第一次<code>ite.next()</code> 时， 程序执行到<code>yield 1</code>被终止， 故没有打印日志， 再次执行<code> ite.next()</code> 时， 代码继续， 开始执行<code>console.log(&#39;$&#123;yield 1&#125;&#39;) </code> 但输出不是1 而是 <code>undefiend </code>，因为<code>ite.next()</code>的参数值会被当做上次<code>yield </code>语句的执行结果， 所以下面的<code>ite.next(123456789)</code> 会输出数字 <code>123456789</code></p>\n","categories":[],"tags":[{"name":"ES6标准入门阅读总结","path":"api/tags/ES6标准入门阅读总结.json"}]}