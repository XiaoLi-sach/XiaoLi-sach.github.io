{"title":"手写32个js 面试题","slug":"手写32个js 面试题","date":"2022-05-30T15:08:16.584Z","updated":"2022-05-31T10:26:50.821Z","comments":true,"excerpt":"","content":"<h3 id=\"回顾一下基础的面试题\"><a href=\"#回顾一下基础的面试题\" class=\"headerlink\" title=\"回顾一下基础的面试题\"></a>回顾一下基础的面试题</h3><p><code>一些代码放到github上， 可以拉去进行测试验证</code></p>\n<ol>\n<li><p>数组扁平化</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> list = [<span class=\"number\">1</span>, [<span class=\"number\">2</span>, <span class=\"number\">3</span>, [<span class=\"number\">4</span>, [<span class=\"number\">5</span>]]]]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> temp = list.flat() <span class=\"comment\">// 正常情况下</span></span><br><span class=\"line\"><span class=\"comment\">// 如果数组嵌套过深则</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> temp2 = list.flat(<span class=\"literal\">Infinity</span>)</span><br></pre></td></tr></table></figure></li>\n<li><p>数组去重</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> list = [<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">// 语法较新</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> temp = <span class=\"built_in\">Array</span>.from(<span class=\"keyword\">new</span> <span class=\"built_in\">Set</span>(list))</span><br><span class=\"line\"><span class=\"comment\">// 正常我喜欢这么写</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> temp2 = list.filter(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> list.indexOf(item) === index;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>问： Array.from 是什么？？</p>\n<blockquote>\n<p>答：对类似数组或可迭代对象创建一个新的浅拷贝的数组实例</p>\n</blockquote>\n</blockquote>\n</li>\n<li><p>手写es6 filter方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Array</span>.prototype.filter = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">callback, thisArg</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">const</span> result = []</span><br><span class=\"line\">   <span class=\"keyword\">const</span> list = <span class=\"built_in\">Object</span>(<span class=\"built_in\">this</span>)</span><br><span class=\"line\">   <span class=\"keyword\">const</span> len = <span class=\"built_in\">this</span>.length &gt;&gt;&gt; <span class=\"number\">0</span> <span class=\"comment\">// 必须为正整数</span></span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i <span class=\"keyword\">in</span> list) &#123;</span><br><span class=\"line\">         <span class=\"keyword\">if</span> (callback.call(thisArg, list[i], i, list)) &#123;</span><br><span class=\"line\">            result.push(list[i])</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>手写es6 map方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Array</span>.prototype.map = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">callback, thisArg</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">const</span> result = [];</span><br><span class=\"line\">   <span class=\"keyword\">const</span> list = <span class=\"built_in\">Object</span>(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">   <span class=\"keyword\">const</span> len = <span class=\"built_in\">this</span>.length &gt;&gt;&gt; <span class=\"number\">0</span>; <span class=\"comment\">//  同上</span></span><br><span class=\"line\">   <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 调用回调， 将新的值传回去</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (i <span class=\"keyword\">in</span> list) &#123;</span><br><span class=\"line\">         result[i] = callback.call(thisArg, list[i], i, list)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>手写 function.prototype.call()</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   </span><br></pre></td></tr></table></figure></li>\n</ol>\n","categories":[],"tags":[{"name":"面试","path":"api/tags/面试.json"}]}