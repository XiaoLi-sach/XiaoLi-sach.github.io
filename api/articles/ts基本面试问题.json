{"title":"ts基础面试内容","slug":"ts基本面试问题","date":"2022-05-30T14:41:01.647Z","updated":"2022-05-30T15:07:59.592Z","comments":true,"excerpt":"","content":"<ul>\n<li><p>interface 和 type 的区别</p>\n<ul>\n<li><p>interface只能声明对象， type的右边可以是任何类型（包括对象在内）</p>\n</li>\n<li><p>扩展时表现不同</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">interface</span> test &#123;</span><br><span class=\"line\">    x: <span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> test2 <span class=\"keyword\">extends</span> test &#123;</span><br><span class=\"line\">    x: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> test = &#123;</span><br><span class=\"line\">    x: <span class=\"built_in\">number</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">type</span> test1 = &#123;</span><br><span class=\"line\">    x: <span class=\"built_in\">string</span></span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> test = test &amp; test1 <span class=\"comment\">// 这是的test 是一个 &#x27;number &amp; string&#x27;   就是never</span></span><br></pre></td></tr></table></figure></li>\n<li><p>多次定义表现不同<br>interface 可以定义多次， 多次的声明会合并<br>type定义多次会报错</p>\n</li>\n<li><p>计算属性<br>type 能使用’in’关键字 生成映射类型， 但interface 不可以</p>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> list = <span class=\"string\">&#x27;first&#x27;</span> | <span class=\"string\">&#x27;second&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> DubeType = &#123;</span><br><span class=\"line\">    [key <span class=\"keyword\">in</span> list] :<span class=\"built_in\">string</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> test:DubeType = &#123;</span><br><span class=\"line\">    first: <span class=\"string\">&#x27;11&#x27;</span>,</span><br><span class=\"line\">    second: <span class=\"string\">&#x27;22&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>抽象类<br>不具体的类，通常作为父类， 因为仅作为基类，不可以 new</p>\n</li>\n<li><p>.d.ts 作用</p>\n<ul>\n<li>处理引入外部的js库中js文件里变量的具体类型不明确的问题，为了告诉ts变量的类型， 所以定义.d.ts</li>\n<li>为 ts 提供有关用 js 编写的 API 的类型信息</li>\n<li>简单理解为在ts中调用js 的声明文件</li>\n</ul>\n</li>\n</ul>\n","categories":[],"tags":[{"name":"面试","path":"api/tags/面试.json"}]}