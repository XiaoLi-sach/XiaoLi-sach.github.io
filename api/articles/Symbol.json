{"title":"Symbol","slug":"Symbol","date":"2021-03-30T10:49:59.561Z","updated":"2021-03-30T11:25:30.821Z","comments":true,"excerpt":"","content":"<p><code>Symbol</code> 为不会重复的值， 第七种基本数据类型， 类似字符串， 可以作为对象的<code>key</code>， 但不会被<code>for...of</code> , <code>for...in</code>, <code>Object.getOwnPropertyNames()</code>, <code>Object.keys()</code> 返回， 如需遍历， 需使用<code>Object.getOwnPropertySymbols()</code>, 或者 <code>Reflect.ownKeys() </code>返回全部<code>Key</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> foo = <span class=\"built_in\">Symbol</span>(<span class=\"string\">&#x27;foo&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> obj = &#123; [foo]: <span class=\"string\">&#x27;foobar&#x27;</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.getOwnPropertyNames(obj)</span><br><span class=\"line\"><span class=\"comment\">// []</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.getOwnProperTySymbols(obj)</span><br><span class=\"line\"><span class=\"comment\">// [Symbol(foo)]</span></span><br><span class=\"line\"><span class=\"built_in\">Reflect</span>.ownKeys(obj)</span><br><span class=\"line\"><span class=\"comment\">// [Symbol(foo)]</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"1-Symbol-for-和-Symbol-keyFor\"><a href=\"#1-Symbol-for-和-Symbol-keyFor\" class=\"headerlink\" title=\"1. Symbol.for() 和 Symbol.keyFor()\"></a><strong>1. Symbol.for() 和 Symbol.keyFor()</strong></h5><ul>\n<li><code>Symol </code>可以区确保生成的值不同， 但有时需要保存下来以便再次使用， 类似于单例， 如果存在就不会重新创建。 这时就需要使用 <code>Symbol.for()</code>。 <figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> s1 = <span class=\"built_in\">Symbol</span>(<span class=\"string\">&#x27;foo&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> s2 = <span class=\"built_in\">Symbol</span>.for(<span class=\"string\">&#x27;foo&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> s3 = <span class=\"built_in\">Symbol</span>.for(<span class=\"string\">&#x27;foo&#x27;</span>)</span><br><span class=\"line\">s1 = s2 <span class=\"comment\">// true</span></span><br><span class=\"line\">s2 = s3 <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n从上面的代码可以看出,<code>Symbol.for</code>类似与将这个<code>Symbol</code> 等级, 所以<code>s1</code> 这个未登记的 <code>Symbol </code>不会等于其他<code>Symbol</code><br><code>Symbol.keyfor</code> 会返回已登记的 <code>Symbol </code>的 <code>key</code> , 一定是登记过的次啊会返回,  接上俐:</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Symbol</span>.keyFor(s1) <span class=\"comment\">// undefiend</span></span><br><span class=\"line\"><span class=\"built_in\">Symbol</span>.keyFor(s2) <span class=\"comment\">// &quot;foo&quot;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"2-作为属性名的-Symbol\"><a href=\"#2-作为属性名的-Symbol\" class=\"headerlink\" title=\"2. 作为属性名的 Symbol\"></a><strong>2. 作为属性名的 Symbol</strong></h5><p>由于每一个 Symbol 值都是不相等的， 这意味着Symbol 值可以作为标识符， 用于对象的属性名， 就能保证不会出现同名属性， 这对于一个对象由多个模块构成的情况非常有用，能防止某一个键被不小心改写或覆盖</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> mySymbol = <span class=\"built_in\">Symbol</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 1.</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = &#123;&#125;</span><br><span class=\"line\">\ta[mySymbol] = <span class=\"string\">&#x27;Hello!&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 2.</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = &#123;</span><br><span class=\"line\">\t[mySymbol]: <span class=\"string\">&#x27;Hello!&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 3.</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> a = &#123;&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProerty(a, mySymbol, &#123; <span class=\"attr\">value</span>: <span class=\"string\">&#x27;Hello!&#x27;</span> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//最后输出结果都是：</span></span><br><span class=\"line\">a[mySymbol] <span class=\"comment\">// &quot;Hello!&quot;</span></span><br></pre></td></tr></table></figure>\n<p>通过方括号结构 和Object.defineProperty， 将对象的属性名指定为一个Symbol 值。<br>当 Symbol 值作为对象属性名时， 不能用点运算符。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> mySymbol = <span class=\"built_in\">Symbol</span>()</span><br><span class=\"line\"><span class=\"keyword\">const</span> a = &#123;&#125;</span><br><span class=\"line\">a.mySymbol = <span class=\"string\">&#x27;Hello&#x27;</span></span><br><span class=\"line\">a[mySymbol] <span class=\"comment\">// undefined</span></span><br><span class=\"line\">a[<span class=\"string\">&#x27;mySymbol&#x27;</span>] <span class=\"comment\">// &quot;hello&quot;</span></span><br></pre></td></tr></table></figure>\n<p>通过上例 同理可得： Symbol 值定义属时， Symbol 值必须放在方括号之中。<br>Symbol还可以用于定义一组常量， 保证这组常量的值都是不相等的。 例子：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1.</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> log = &#123;&#125;</span><br><span class=\"line\">log.levels = &#123;</span><br><span class=\"line\">\tDEBUG: <span class=\"built_in\">Symbol</span>(<span class=\"string\">&#x27;debug&#x27;</span>),</span><br><span class=\"line\">\tINFO: <span class=\"built_in\">Symbol</span>(<span class=\"string\">&#x27;info&#x27;</span>),</span><br><span class=\"line\">\tWARN: <span class=\"built_in\">Symbol</span>(<span class=\"string\">&#x27;warn&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(log.levels.DEBUG, <span class=\"string\">&#x27;debug message&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(log.levels.INFO, <span class=\"string\">&#x27;info message&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2.</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> COLOR_RED = <span class=\"built_in\">Symbol</span>()</span><br><span class=\"line\"><span class=\"keyword\">const</span> COLOR_GREEN = <span class=\"built_in\">Symbol</span>()</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getComplement</span>(<span class=\"params\">color</span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span>(color) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> COLOR_RED:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> COLOR_GREEN</span><br><span class=\"line\">\t\t<span class=\"keyword\">case</span> COLOR_GREEN:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> COLOR_RED</span><br><span class=\"line\">\t\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Error</span>(<span class=\"string\">&#x27;Undefined color&#x27;</span>)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>常量使用Symbol 值最大的好处， 就是其他任何值都不可能由相同的值了， 因此可以保证上面的switch 语句会按设计的方式工作。 当Symbol作为属性名时， 该属性是公开属性， 不是私有属性</p>\n","categories":[],"tags":[{"name":"ES6标准入门阅读总结","path":"api/tags/ES6标准入门阅读总结.json"}]}